;; Object init/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "init/"
  :tables (list 
   (semanticdb-table "muse.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("add-to-list" code nil nil [225 298]) ("outline" include nil nil [300 318]) ("muse" include nil nil [354 369]) ("muse-colors" include nil nil [401 423]) ("muse-mode" include nil nil [459 479]) ("muse-blosxom" include nil nil [506 529]) ("muse-html" include nil nil [553 573]) ("muse-wiki" include nil nil [610 630]) ("muse-xml" include nil nil [655 674]) ("muse-journal" include nil nil [708 731]) ("global-set-key" code nil nil [756 812]) ("add-hook" code nil nil [814 1197]) ("add-to-list" code nil nil [1199 2596]) ("add-to-list" code nil nil [2598 2822]) ("setq" code nil nil [2824 3022]) ("muse-publishing-standard-title" function nil nil [3052 3359]) ("muse-publishing-standard-html-header" function (:arguments ("&optional" "title")) nil [3361 3897]) ("muse-insert-reset-chapter" function nil nil [3899 3977]) ("muse-journal-add-entry" function nil nil [3979 4248]))
    :file "muse.el"
    :pointmax 4250
    )
   (semanticdb-table "multimedia.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("add-to-list" code nil nil [241 322]) ("emms-setup" include nil nil [324 345]) ("emms-streams" include nil nil [346 369]) ("emms-standard" code nil nil [371 386]) ("emms-default-players" code nil nil [387 409]) ("setq" code nil nil [411 466]) ("setq" code nil nil [467 507]) ("setq" code nil nil [508 546]) ("multimedia-keymap" variable (:default-value (make-sparse-keymap "Multimedia (p)lay, (s)treams, (v)iew (l)ist, (+/-)volume, (up/down)next/previous")) nil [548 743]) ("define-key" code nil nil [744 802]) ("define-key" code nil nil [803 869]) ("define-key" code nil nil [871 927]) ("define-key" code nil nil [928 988]) ("define-key" code nil nil [989 1048]) ("define-key" code nil nil [1049 1112]) ("define-key" code nil nil [1113 1176]) ("multimedia-play-keymap" variable (:default-value (make-sparse-keymap "Play (a)ll, p(l)aylist, (f)ile, (F)ind, (d)irectory-tree")) nil [1178 1340]) ("define-key" code nil nil [1342 1405]) ("define-key" code nil nil [1407 1467]) ("define-key" code nil nil [1468 1536]) ("define-key" code nil nil [1537 1601]) ("define-key" code nil nil [1602 1666]) ("define-key" code nil nil [1667 1741]) ("define-key" code nil nil [1742 1801]) ("define-key" code nil nil [1802 1861]) ("define-key" code nil nil [1862 1924]) ("define-key" code nil nil [1925 1984]) ("audio-mixer" include nil nil [2050 2072]) ("add-hook" code nil nil [2074 2212]) ("setq" code nil nil [2214 2256]) ("audio-mixer-setup" code nil nil [2257 2276]) ("define-key" code nil nil [2278 2343]) ("define-key" code nil nil [2344 2409]) ("define-key" code nil nil [2410 2469]))
    :file "multimedia.el"
    :pointmax 2470
    :unmatched-syntax 'nil
    )
   (semanticdb-table "trac.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("trac-wiki-define-multiple-projects" code nil nil [211 323]))
    :file "trac.el"
    :pointmax 324
    )
   (semanticdb-table "files.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("find-keymap" variable (:default-value (make-sparse-keymap "Find (g)rep, (s)earch, (f)ile at point, (d|D)ired, (t|T)ag")) nil [381 547]) ("define-key" code nil nil [549 604]) ("define-key" code nil nil [606 655]) ("define-key" code nil nil [656 697]) ("define-key" code nil nil [698 744]) ("define-key" code nil nil [745 785]) ("define-key" code nil nil [786 821]) ("define-key" code nil nil [822 861]) ("define-key" code nil nil [862 904]) ("define-key" code nil nil [905 948]) ("define-key" code nil nil [950 997]) ("define-key" code nil nil [999 1045]) ("define-key" code nil nil [1046 1092]) ("define-key" code nil nil [1093 1141]) ("setq" code nil nil [1314 1415]) ("ido" include nil nil [1595 1609]) ("iswitchb" include nil nil [1610 1629]) ("iswitchb-highlight" include nil nil [1630 1659]) ("ido-mode" code nil nil [1661 1673]) ("iswitchb-mode" code nil nil [1718 1735]) ("setq" code nil nil [1736 1758]) ("add-hook" code nil nil [1788 1859]) ("saint/iswitchb-summaries-to-end" function nil nil [1861 2387]) ("eval-after-load" code nil nil [2475 2570]) ("tar-untar-buffer" function (:arguments ("before" "saint" "directory" "activate")) nil [2572 2730]) ("global-change-directory" function (:user-visible-flag t :arguments ("from" "to")) nil [3617 4025]) ("setq" code nil nil [4027 4060]))
    :file "files.el"
    :pointmax 4637
    :unmatched-syntax 'nil
    )
   (semanticdb-table "bbdb.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("add-to-list" code nil nil [225 304]) ("bbdb-autoloads" include nil nil [306 331]) ("bbdb" include nil nil [332 347]) ("bbdb-com" include nil nil [348 367]) ("bbdb-hooks" include nil nil [368 389]) ("setq" code nil nil [391 448]) ("bbdb-initialize" code nil nil [450 496]) ("setq" code nil nil [525 549]) ("setq" code nil nil [648 689]) ("setq" code nil nil [708 751]) ("setq" code nil nil [767 795]) ("setq" code nil nil [877 920]) ("setq" code nil nil [975 1008]) ("setq" code nil nil [1036 1081]) ("setq" code nil nil [1082 1128]) ("setq" code nil nil [1130 1163]) ("setq" code nil nil [1164 1197]) ("add-hook" code nil nil [1233 1283]) ("setq" code nil nil [1285 1359]) ("setq" code nil nil [1361 2031]) ("setq" code nil nil [2074 2211]) ("setq" code nil nil [2213 2378]) ("regexp-assoc" function (:arguments ("key" "list")) nil [2380 2653]) ("bbdb/gnus-update-records" function (:arguments ("around" "saint" "activate" "preactivate")) nil [2655 3834]) ("put" code nil nil [3836 3873]) ("put" code nil nil [3874 3908]) ("add-hook" code nil nil [3928 3978]) ("add-hook" code nil nil [3979 4034]) ("add-hook" code nil nil [4035 4084]) ("add-hook" code nil nil [4085 4138]))
    :file "bbdb.el"
    :pointmax 4139
    )
   (semanticdb-table "devel.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("compile" include nil nil [640 658]) ("setq-default" code nil nil [685 723]) ("setq" code nil nil [724 755]) ("setq" code nil nil [756 790]) ("setq" code nil nil [791 826]) ("global-set-key" code nil nil [828 864]) ("global-set-key" code nil nil [874 922]) ("add-hook" code nil nil [924 1082]) ("define-key" code nil nil [1084 1130]) ("load-file" code nil nil [1178 1259]) ("semantic-load-enable-minimum-features" code nil nil [1260 1299]) ("semantic-load-enable-code-helpers" code nil nil [1300 1335]) ("semantic-load-enable-gaudy-code-helpers" code nil nil [1336 1377]) ("add-to-list" code nil nil [1564 1637]) ("ecb-autoloads" include nil nil [1638 1662]) ("global-set-key" code nil nil [1835 1986]) ("add-to-list" code nil nil [2087 2218]) ("css-mode" function (:prototype-flag t) nil [2259 2319]) ("add-to-list" code nil nil [2320 2374]) ("eval-after-load" code nil nil [2375 2496]) ("php-mode" function (:prototype-flag t) nil [2537 2568]) ("add-to-list" code nil nil [2569 2694]) ("when" code nil nil [2779 2962]) ("ascii-table" include nil nil [3137 3165]) ("saint/ascii-table" function (:user-visible-flag t) nil [3167 3645]) ("setq" code nil nil [3810 3912]) ("rfcview-mode" function (:prototype-flag t :user-visible-flag t) nil [3915 3955]) ("setq" code nil nil [3956 4045]) ("ascii-table" include nil nil [4222 4250]) ("saint/ascii-table" function (:user-visible-flag t) nil [4252 4730]) ("setq" code nil nil [4895 4997]) ("rfcview-mode" function (:prototype-flag t :user-visible-flag t) nil [5000 5040]) ("setq" code nil nil [5041 5130]))
    :file "devel.el"
    :pointmax 5131
    :unmatched-syntax 'nil
    )
   (semanticdb-table "gnus.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("add-to-list" code nil nil [225 302]) ("add-to-list" code nil nil [303 380]) ("setq" code nil nil [382 447]) ("setq" code nil nil [448 497]) ("setq" code nil nil [499 538]) ("saint/gnus-buffer-p" function (:arguments ("&optional" "buffer")) nil [540 762]) ("saint/gnus" function nil nil [833 944]) ("saint/unbury-gnus" function nil nil [946 1270]) ("saint/bury-gnus" function (:user-visible-flag t) nil [1272 1926]) ("save-buffers-kill-emacs" function (:arguments ("before" "quit-gnus" "&rest" "activate")) nil [1992 2272]) ("add-hook" code nil nil [2338 2481]) ("global-set-key" code nil nil [2483 2524]) ("add-hook" code nil nil [2762 2816]))
    :file "gnus.el"
    :pointmax 2817
    :unmatched-syntax 'nil
    )
   (semanticdb-table "edit.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("setq" code nil nil [207 1044]) ("add-hook" code nil nil [1046 1193]) ("put" code nil nil [1273 1309]) ("put" code nil nil [1310 1345]) ("put" code nil nil [1346 1383]) ("ansi-color-for-comint-mode-on" function (:prototype-flag t :user-visible-flag t) nil [1430 1490]) ("add-hook" code nil nil [1491 1549]) ("pager" include nil nil [1596 1612]) ("define-key" code nil nil [1613 1672]) ("define-key" code nil nil [1673 1732]) ("define-key" code nil nil [1733 1790]) ("define-key" code nil nil [1791 1848]) ("hippie-exp" include nil nil [2032 2053]) ("setq" code nil nil [2124 2197]) ("define-key" code nil nil [2908 2956]) ("define-key" code nil nil [2957 3013]) ("define-key" code nil nil [3014 3071]) ("winner-mode" code nil nil [3073 3088]) ("windmove-keymap" variable (:default-value (make-sparse-keymap "Window move (up/down/left/right) arrow keys")) nil [3145 3283]) ("define-key" code nil nil [3284 3341]) ("define-key" code nil nil [3342 3401]) ("define-key" code nil nil [3402 3461]) ("define-key" code nil nil [3462 3522]) ("define-minor-mode" code nil nil [3574 3939]) ("define-key" code nil nil [3941 3996]) ("boxquote" include nil nil [4052 4071]) ("rs-info-insert-current-node" function (:prototype-flag t :user-visible-flag t) nil [4072 4192]) ("rs-info-boxquote" function (:prototype-flag t :user-visible-flag t) nil [4193 4317]) ("rs-info-reload" function (:prototype-flag t :user-visible-flag t) nil [4318 4388]) ("rs-info-insert-node-for-variable" function (:prototype-flag t :user-visible-flag t) nil [4389 4518]) ("defalias" code nil nil [4519 4562]) ("ispell-keymap" variable (:default-value (make-sparse-keymap "Spelling (w)ord, (r)egion, (b)uffer, (m)essage, (c)hange dictionary, (f)lyspell")) nil [4611 4804]) ("define-key" code nil nil [4806 4866]) ("define-key" code nil nil [4867 4918]) ("define-key" code nil nil [4919 4972]) ("define-key" code nil nil [4973 5026]) ("define-key" code nil nil [5027 5081]) ("define-key" code nil nil [5082 5146]) ("define-key" code nil nil [5147 5214]) ("define-key" code nil nil [5215 5268]) ("define-key" code nil nil [5269 5333]) ("define-key" code nil nil [5335 5389]) ("comment-box" function (:prototype-flag t :user-visible-flag t) nil [5515 5578]) ("define-key" code nil nil [5580 5635]) ("define-key" code nil nil [5636 5688]) ("define-key" code nil nil [5690 5745]) ("define-key" code nil nil [5746 5798]) ("define-key" code nil nil [5800 5856]) ("define-key" code nil nil [5857 5911]) ("define-key" code nil nil [5913 5974]) ("define-key" code nil nil [5976 6023]))
    :file "edit.el"
    :pointmax 6024
    :unmatched-syntax 'nil
    )
   (semanticdb-table "globals.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("setq" code nil nil [217 284]) ("load" code nil nil [285 303]) ("unless" code nil nil [305 351]) ("setq" code nil nil [376 563]) ("setq" code nil nil [564 610]) ("setq" code nil nil [611 673]) ("fset" code nil nil [718 747]) ("set-selection-coding-system" code nil nil [801 861]) ("setq" code nil nil [942 1272]) ("dolist" code nil nil [1341 1885]) ("setq" code nil nil [1930 2014]) ("dolist" code nil nil [2077 2382]) ("define-key" code nil nil [2493 2539]) ("define-key" code nil nil [2540 2594]) ("define-key" code nil nil [2595 2639]) ("define-key" code nil nil [2641 2697]) ("define-key" code nil nil [2698 2754]) ("define-key" code nil nil [2755 2809]) ("define-key" code nil nil [2811 2856]) ("define-key" code nil nil [3015 3081]) ("define-key" code nil nil [3082 3148]) ("define-key" code nil nil [3150 3211]) ("define-key" code nil nil [3212 3273]) ("define-key" code nil nil [3274 3329]) ("saint/make-new-frame" function (:user-visible-flag t :arguments ("frame-name")) nil [3409 3579]) ("insert-timestamp" function (:user-visible-flag t) nil [3581 3756]) ("insert-date" function (:user-visible-flag t) nil [3758 3870]))
    :file "globals.el"
    :pointmax 3871
    :unmatched-syntax 'nil
    )
   (semanticdb-table "c.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("personal-c-style" variable (:constant-flag t :default-value (quote ((c-basic-offset . 4) (c-tab-always-indent . t) (c-comment-only-line-offset . 0) (c-auto-newline) (c-indent-level . 0) (case-fold-search) (tab-width . 4) (indent-tabs-mode) (c-hanging-braces-alist (brace-list-intro) (brace-list-open) (brace-list-close) (brace-entry-open) (extern-lang-open after)) (c-hanging-colons-alist (member-init-intro before) (inher-intro) (label after) (access-label after)) (c-cleanup-list scope-operator brace-else-brace brace-elseif-brace brace-catch-brace list-close-comma defun-close-semi) (c-offsets-alist (arglist-intro . +) (arglist-close . c-lineup-arglist) (func-decl-cont . +) (inher-cont . c-lineup-java-inher) (inexpr-class . +) (inline-open . 0) (substatement-open . 0) (case-label . 2) (block-open . 0) (knr-argdecl-intro . -)) (c-hanging-semi&comma-criteria c-semi&comma-no-newlines-at-all)))) nil [213 2199]) ("c-add-style" code nil nil [2225 2266]) ("personal-c-mode-hook" function nil nil [2268 2947]) ("add-hook" code nil nil [2949 3001]) ("c-semi&comma-no-newlines-at-all" function nil nil [3106 3209]) ("ole-newline-after-opening-brace" function (:arguments ("syntax" "pos")) nil [3257 3564]) ("ole-newline-before-closing-brace" function (:arguments ("syntax" "pos")) nil [3566 3829]) ("ole-newline-before-and-after-closing-brace" function (:arguments ("syntax" "pos")) nil [3831 4262]) ("ole-c-lineup-arglist-operators" function (:arguments ("langelem")) nil [4264 5175]) ("setq" code nil nil [5680 5821]) ("electric-c-leftbrace" function (:user-visible-flag t :arguments ("arg")) nil [5823 6422]))
    :file "c.el"
    :pointmax 6423
    )
   (semanticdb-table "lisp.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("parenface" include nil nil [225 245]) ("mic-paren" include nil nil [246 266]) ("show-paren-mode" code nil nil [268 289]) ("when" code nil nil [332 421]) ("setq" code nil nil [423 487]) ("setq" code nil nil [488 555]) ("setf" code nil nil [556 584]) ("paren-activate" code nil nil [586 602]) ("paredit" include nil nil [682 700]) ("add-hook" code nil nil [702 1379]) ("add-to-list" code nil nil [1475 1556]) ("outline" include nil nil [1580 1598]) ("slime" include nil nil [1599 1615]) ("slime-setup" code nil nil [1617 1630]) ("setq" code nil nil [1632 1877]) ("setq" code nil nil [1879 1928]) ("defslime-start" function (:arguments ("name" "lisp")) nil [1930 2025]) ("defslime-start" code nil nil [2027 2055]) ("add-hook" code nil nil [2057 2344]) ("add-hook" code nil nil [2346 2451]) ("add-hook" code nil nil [2453 2531]) ("oa:end-of-defun" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [2630 2822]) ("oa:reformat-defun" function (:user-visible-flag t) nil [2824 3040]) ("oa:backward-up-list-or-backward-sexp" function (:user-visible-flag t) nil [3042 3250]) ("oa:down-list-or-forward-sexp" function (:user-visible-flag t) nil [3252 3506]) ("oa:mark-list" function (:user-visible-flag t :arguments ("&optional" "arg")) nil [3508 3981]) ("oa:close-all-sexp-and-reindent" function (:user-visible-flag t :arguments ("&optional" "region")) nil [3983 4342]) ("oa:move-past-close-and-reindent" function (:user-visible-flag t) nil [4344 4552]) ("define-lisp-key" function (:arguments ("keyspec" "command")) nil [4657 4843]) ("define-lisp-key" code nil nil [4845 4902]) ("define-lisp-key" code nil nil [4903 4961]) ("define-lisp-key" code nil nil [4962 5015]) ("define-lisp-key" code nil nil [5016 5066]) ("define-lisp-key" code nil nil [5067 5116]) ("define-lisp-key" code nil nil [5117 5164]) ("define-lisp-key" code nil nil [5165 5209]) ("define-lisp-key" code nil nil [5210 5254]) ("define-lisp-key" code nil nil [5255 5326]) ("define-lisp-key" code nil nil [5327 5390]) ("define-lisp-key" code nil nil [5391 5443]) ("define-lisp-key" code nil nil [5444 5497]) ("define-lisp-key" code nil nil [5498 5542]) ("define-lisp-key" code nil nil [5543 5594]) ("define-lisp-key" code nil nil [5596 5651]) ("define-lisp-key" code nil nil [5652 5718]) ("define-lisp-key" code nil nil [5720 5775]) ("define-lisp-key" code nil nil [5776 5831]) ("define-lisp-key" code nil nil [5832 5877]) ("define-lisp-key" code nil nil [5878 5923]) ("define-lisp-key" code nil nil [5924 5978]) ("define-key" code nil nil [6083 6159]) ("define-key" code nil nil [6160 6247]) ("define-key" code nil nil [6248 6322]) ("define-key" code nil nil [6323 6395]) ("define-key" code nil nil [6396 6476]) ("define-key" code nil nil [6477 6557]) ("define-key" code nil nil [6558 6634]) ("define-key" code nil nil [6636 6710]) ("describe-foo-at-point" function (:user-visible-flag t) nil [6809 7829]))
    :file "lisp.el"
    :pointmax 7944
    )
   (semanticdb-table "www.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("add-to-list" code nil nil [240 321]) ("setq" code nil nil [323 366]) ("wget" function (:prototype-flag t :user-visible-flag t) nil [368 421]) ("wget-web-page" function (:prototype-flag t :user-visible-flag t) nil [422 501]) ("eval-after-load" code nil nil [502 605]) ("add-to-list" code nil nil [648 728]) ("if" code nil nil [730 803]) ("w3m-wget" include nil (dependency-file "/home/saint/Emacs/packages/emacs-wget-0.5.0/w3m-wget.el") [804 823]) ("w3m-browse-url" function (:prototype-flag t :user-visible-flag t) nil [825 890]) ("define-key" code nil nil [892 934]) ("define-key" code nil nil [935 993]) ("setq" code nil nil [995 1114]) ("setq" code nil nil [1116 1166]) ("add-hook" code nil nil [1168 1219]) ("eval-after-load" code nil nil [1221 2051]) ("saint/w3m-view-source" function (:arguments ("url")) nil [2365 2625]) ("desktop-buffer-w3m-misc-data" function nil nil [2750 2892]) ("desktop-buffer-w3m" function nil nil [2894 3198]) ("if" code nil nil [3200 3519]))
    :file "www.el"
    :pointmax 3520
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre3"
  :semanticdb-version "2.0pre3"
  )
